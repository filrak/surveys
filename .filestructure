# File Structure

## Core Configuration
- `nuxt.config.ts` - Main Nuxt configuration file with Firebase setup and runtime config
- `tailwind.config.js` - Tailwind CSS configuration with shadcn theme setup
- `README.md` - Project documentation and TODO list

## Pages
- `pages/`
  - `index.vue` - Home page listing all surveys with create/edit/delete functionality
  - `login.vue` - Authentication page with email and Google sign-in options
  - `signup.vue` - Registration page with email and Google sign-up options
  - `create.vue` - Survey creation page with template selection and customization
  - `chat/[id].vue` - Dynamic chat page for conducting surveys
  - `answers/[id].vue` - Survey answers view page
  - `subscribe.vue` - Subscription/pricing page

## Components
- `components/`
  - `create/` - Survey creation components
    - `TemplateSelection.vue` - Survey template selection step
    - `SurveyDetails.vue` - Survey questions customization step
  - `FirestoreInit.vue` - Handles Firestore collections initialization on app start
  - `ui/` - shadcn-vue components
    - `button/` - Button component
    - `card/` 
      - `Card.vue` - Base card component from shadcn
      - `CardContent.vue` - Card content component
      - `CardHeader.vue` - Card header component
      - `CardTitle.vue` - Card title component
      - `CardFooter.vue` - Card footer component
      - `index.ts` - Barrel file for card component exports
    - `input/` 
      - `Input.vue` - Base input component from shadcn
      - `index.ts` - Barrel file for input component exports
    - `label/` 
      - `Label.vue` - Base label component from shadcn
      - `index.ts` - Barrel file for label component exports
    - `textarea/`
      - `Textarea.vue` - Base textarea component from shadcn
      - `index.ts` - Barrel file for textarea component exports
    - `radio-group/`
      - `RadioGroup.vue` - Base radio group component from shadcn
      - `RadioGroupItem.vue` - Radio group item component
      - `index.ts` - Barrel file for radio group component exports
    - `app-header/` - Application header component

## Data
- `data/`
  - `surveyTemplates.ts` - Predefined survey templates with questions and expected answers

## Composables
- `composables/`
  - `useSurvey.ts` - Survey management functions (create, read, update, delete)
  - `useCollectionInit.ts` - Firestore collections initialization logic
  - `useSurvey.ts` - Survey management composable using surveyService
  - `useAnswer.ts` - Answer management composable (currently using localStorage)
  - `types.ts` - Common TypeScript interfaces and types

## Services
- `services/`
  - `surveyService.ts` - Service for managing surveys in Firestore
    - getSurvey - Get a single survey by ID
    - listSurveys - List all surveys for a user
    - setSurvey - Create or update a survey
    - deleteSurvey - Delete a survey
  - `answerService.ts` - Service for managing survey answers (empty for now)
  - `utils.ts` - Common utilities for Firestore operations
    - Collection references
    - Document operations
    - Ownership checks
    - Query builders
    - Response helpers
    - Document mappers

## Middleware
- `middleware/`
  - `auth.global.js` - Global authentication middleware (excludes home, login, and signup pages)

## Server
- `server/`
  - `api/`
    - `init-collections.ts` - API endpoint for initializing Firestore collections
  - `plugins/`
    - `firebase-admin.ts` - Firebase Admin SDK initialization

## Security
- `firestore.rules` - Firestore security rules for surveys, responses, and analytics
  - Survey rules - Read by any auth user, write/update/delete by owner
  - Response rules - Create by any auth user, read by response owner or survey owner
  - Analytics rules - Read by any auth user, write by survey owner

## Assets
- `public/`
  - `google.svg` - Google logo for authentication buttons

## Configuration Files
- `.windsurfrules` - Project requirements and guidelines
- `.filestructure` - This file, documenting the project structure
